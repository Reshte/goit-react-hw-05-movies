{"version":3,"file":"static/js/415.b7373f44.chunk.js","mappings":"kNAGaA,EAAUC,EAAAA,EAAAA,GAAH,6GAOPC,EAAcD,EAAAA,EAAAA,GAAH,kWAYXE,GAAOF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2DAKJI,EAASJ,EAAAA,EAAAA,IAAH,kIAQNK,EAAYL,EAAAA,EAAAA,GAAH,gR,SChCTM,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAEpC,OADHC,QAAQC,IAAIJ,IAEP,SAACR,EAAD,UACKQ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACd,EAAD,WACE,UAACC,EAAD,CAAOc,GAAE,UAAKR,GAAL,OAAWK,GAAMI,MAAO,CAAEC,KAAK,GAAD,OAAKT,IAA5C,WACE,SAACL,EAAD,CAAQe,IAAG,yCAAoCJ,GAAeK,IAAI,YAClE,SAACf,EAAD,UAAYS,QAHED,EADR,KASvB,C,kMCfKQ,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,2BADO,cACxBG,EADwB,OAIxBlB,EAASkB,EAASC,KAAKC,QAJC,kBAKvBpB,GALuB,2CAAH,qDAQhBqB,EAAS,mCAAG,WAAMC,GAAN,yFACAL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFzE,cACjBJ,EADiB,OAIjBlB,EAASkB,EAASC,KAAKC,QAJN,kBAKhBpB,GALgB,2CAAH,sDAQTuB,EAAe,mCAAG,WAAMjB,GAAN,yFACNW,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAR,EADA,oBACcS,EADd,oBADM,cACvBG,EADuB,OAKvBM,EAAUN,EAASC,KALI,kBAMtBK,GANsB,2CAAH,sDASfC,EAAe,mCAAG,WAAMnB,GAAN,yFACNW,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAR,EADA,4BACsBS,EADtB,oBADM,cACvBG,EADuB,OAIvBQ,EAAUR,EAASC,KAAKQ,KAJD,kBAKtBD,GALsB,2CAAH,sDAQfE,EAAe,mCAAG,WAAMtB,GAAN,yFACNW,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAR,EADA,4BACsBS,EADtB,2BADM,cACvBG,EADuB,OAIvBW,EAAUX,EAASC,KAAKC,QAJD,kBAKtBS,GALsB,2CAAH,qD,kJCjCfC,EAAO,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO/B,EAAP,KAAegC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACJjC,EAAOkC,OAAS,IAClB,iBAAC,8GAEwBlB,EAAAA,EAAAA,MAFxB,OAEShB,EAFT,OAGGgC,EAAUhC,GAHb,gDAKGG,QAAQC,IAAR,MALH,wDAAD,EASA,GAAE,CAACJ,KAGL,6BACE,eAAImC,MAAO,CAAEC,UAAW,UAAxB,6BACA,SAAC,IAAD,CAAYpC,OAAQA,EAAQC,IAAI,UAAUC,MAAO,QAGtD,EAED,W","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/servises/Fetch.js","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom'\n\nexport const Wrapper = styled.ul`\n    display:flex;\n    gap:20px;\n    justify-content: center;\n    flex-wrap:wrap;\n`\n\nexport const CardWrapper = styled.li`\n    list-style:none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    background-color:white;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.3), -23px 0 20px -23px rgba(0,0,0,0.8), 23px 0 20px -23px rgba(0,0,0,0.8), 0 0 40px rgba(0,0,0,0.1) inset;   \n\n`\n\nexport const Link = styled(NavLink)`\n    text-decoration:none;\n      \n`\n\nexport const Poster = styled.img`\n    /* margin-bottom: 10px; */\n width: 280px;\n height: 402px;\n overflow:overlay;\nborder-radius: 5px;\n`\n\nexport const MovieName = styled.h2`\nmargin-bottom: 4px;\nfont-size: 18px;\nline-height: 1.17;\nwidth:170px;\nheight: 60px;\nwhite-space:pre-wrap;\ntext-align: center;\ncolor:black;\nmargin: 0 auto;\npadding: 10px 25px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n","\nimport{ Wrapper, CardWrapper , Poster, MovieName, Link } from './MoviesList.styled'\n\nexport const MoviesList = ({ movies, url, query }) => {\n   console.log(movies)\n      return(\n        <Wrapper>\n            {movies.map(({ id, title, poster_path}) => (\n              <CardWrapper key={id}>\n                <Link  to={`${url}${id}`} state={{ from: `${query}` }}>\n                  <Poster src={`http://image.tmdb.org/t/p/w400/${poster_path}`} alt=\"poster\" />\n                  <MovieName>{title}</MovieName>\n                </Link>\n              </CardWrapper>))}\n        </Wrapper>\n    )\n}\n\nexport default MoviesList;","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1&language=en-US`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovies = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const details = response.data;\n  return details;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast;\n  return credits;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results;\n  return reviews;\n};\n","import { MoviesList } from '../components/MoviesList/MoviesList'\nimport { useState, useEffect } from 'react';\nimport { getPopularMovies } from '../components/servises/Fetch'\n\nexport const Home = () => {\n  const [movies, setMovies] = useState([])\n   \n  useEffect(() => {\n    if (movies.length > 0){return} else{\n      (async function () {\n        try {\n          const movies = await getPopularMovies()\n          setMovies(movies)          \n        } catch (error) {\n          console.log(error)\n        }\n        })()\n     }\n     }, [movies])\n\n  return (\n    <main>\n      <h1 style={{ textAlign: 'center' }}>Tredding today</h1>\n      <MoviesList movies={movies} url=\"movies/\" query={'/'} />\n    </main>\n  );\n};\n\nexport default Home;"],"names":["Wrapper","styled","CardWrapper","Link","NavLink","Poster","MovieName","MoviesList","movies","url","query","console","log","map","id","title","poster_path","to","state","from","src","alt","BASE_URL","API_KEY","getPopularMovies","axios","response","data","results","getMovies","searchQuery","getMovieDetails","details","getMovieCredits","credits","cast","getMovieReviews","reviews","Home","useState","setMovies","useEffect","length","style","textAlign"],"sourceRoot":""}