{"version":3,"file":"static/js/736.6d48be04.chunk.js","mappings":"6SAEaA,EAAUC,EAAAA,EAAAA,IAAH,2CAIPC,EAAYD,EAAAA,EAAAA,IAAH,4C,SCATE,EAAM,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBI,OAdAC,EAAAA,EAAAA,YAAU,WACFL,IACA,iBAAC,8GAEmBM,EAAAA,EAAAA,IAAgBN,GAFnC,OAEGO,EAFH,OAGHH,EAAUG,GAHP,gDAKHC,QAAQC,IAAR,MALG,wDAAD,EAUP,GAAC,CAACT,KAGC,SAACJ,EAAD,WACI,wBACDO,EAAOO,KAAI,YAAsC,IAApCC,EAAmC,EAAnCA,KAAKC,EAA8B,EAA9BA,UAAUC,EAAoB,EAApBA,aAAaC,EAAO,EAAPA,GAAS,OACjD,2BACI,SAAChB,EAAD,CAAWiB,IAAG,yCAAoCF,GAAgBG,IAAI,MACtE,uBAAIL,KACJ,uBAAIC,MAHEE,EAKV,OAIX,EAED,G,kMCtCMG,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,2BADO,cACxBG,EADwB,OAIxBC,EAASD,EAASE,KAAKC,QAJC,kBAKvBF,GALuB,2CAAH,qDAQhBG,EAAS,mCAAG,WAAMC,GAAN,yFACAN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEQ,IAFzE,cACjBL,EADiB,OAIjBC,EAASD,EAASE,KAAKC,QAJN,kBAKhBF,GALgB,2CAAH,sDAQTK,EAAe,mCAAG,WAAMb,GAAN,yFACNM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,oBADM,cACvBG,EADuB,OAKvBO,EAAUP,EAASE,KALI,kBAMtBK,GANsB,2CAAH,sDASftB,EAAe,mCAAG,WAAMQ,GAAN,yFACNM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBADM,cACvBG,EADuB,OAIvBd,EAAUc,EAASE,KAAKM,KAJD,kBAKtBtB,GALsB,2CAAH,sDAQfuB,EAAe,mCAAG,WAAMhB,GAAN,yFACNM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,EADtB,2BADM,cACvBG,EADuB,OAIvBU,EAAUV,EAASE,KAAKC,QAJD,kBAKtBO,GALsB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/servises/Fetch.js"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n    display:flex;\n`\n\nexport const ActorFoto = styled.img`\n    display:block;\n`","import { getMovieCredits } from \"../servises/Fetch\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { Wrapper, ActorFoto } from \"./Cast.styled\";\n\n\nexport const Cast =()=>{\nconst { movieId } = useParams();\nconst [actors, setActors] = useState([])\n\n    useEffect(() => {\n        if (movieId) {\n            (async function () {\n        try {\n          const credits = await getMovieCredits(movieId)\n          setActors(credits)\n        } catch (error) {\n          console.log(error)\n             }\n        })()\n            \n        }\n    },[movieId])\n\n    return (\n        <Wrapper>\n            <ul>\n          {actors.map(({name,character,profile_path,id}) =>{ return(\n            <li key ={id}>\n                <ActorFoto src={`http://image.tmdb.org/t/p/w200/${profile_path}`} alt=\"\" />\n                <p>{name}</p>\n                <p>{character}</p>\n            </li>\n          )})}\n            </ul>\n        </Wrapper>\n    )\n}\n\nexport default Cast;","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1&language=en-US`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovies = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const details = response.data;\n  return details;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast;\n  return credits;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results;\n  return reviews;\n};\n"],"names":["Wrapper","styled","ActorFoto","Cast","movieId","useParams","useState","actors","setActors","useEffect","getMovieCredits","credits","console","log","map","name","character","profile_path","id","src","alt","BASE_URL","API_KEY","getPopularMovies","axios","response","movies","data","results","getMovies","searchQuery","getMovieDetails","details","cast","getMovieReviews","reviews"],"sourceRoot":""}