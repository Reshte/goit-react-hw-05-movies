{"version":3,"file":"static/js/134.a1150b42.chunk.js","mappings":"2LAGaA,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAEpC,OACE,wBACKF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKL,GAAL,OAAWG,GAAMG,MAAO,CAAEC,KAAK,GAAD,OAAKN,IAA3C,UACE,wBAAKG,OAFAD,EADC,KAQvB,C,+LCdKK,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,2BADO,cACxBG,EADwB,OAIxBb,EAASa,EAASC,KAAKC,QAJC,kBAKvBf,GALuB,2CAAH,qDAQhBgB,EAAS,mCAAG,WAAMC,GAAN,yFACAL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEO,IAFzE,cACjBJ,EADiB,OAIjBb,EAASa,EAASC,KAAKC,QAJN,kBAKhBf,GALgB,2CAAH,sDAQTkB,EAAe,mCAAG,WAAMd,GAAN,yFACNQ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAL,EADA,oBACcM,EADd,oBADM,cACvBG,EADuB,OAKvBM,EAAUN,EAASC,KALI,kBAMtBK,GANsB,2CAAH,sDASfC,EAAe,mCAAG,WAAMhB,GAAN,yFACNQ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAL,EADA,4BACsBM,EADtB,oBADM,cACvBG,EADuB,OAIvBQ,EAAUR,EAASC,KAAKQ,KAJD,kBAKtBD,GALsB,2CAAH,sDAQfE,EAAe,mCAAG,WAAMnB,GAAN,yFACNQ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAL,EADA,4BACsBM,EADtB,2BADM,cACvBG,EADuB,OAIvBW,EAAUX,EAASC,KAAKC,QAJD,kBAKtBS,GALsB,2CAAH,qD,sJC/BfC,EAAS,WACpB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM7B,EAAQ4B,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACM,KAAV/B,GAA0B,OAAVA,IACpB,iBAAC,8GAE0Bc,EAAAA,EAAAA,IAAUd,GAFpC,OAEWF,EAFX,OAGK4B,EAAgB5B,GAHrB,gDAKKkC,QAAQC,IAAR,MALL,wDAAD,EASD,GAAE,CAACjC,IAYJ,OACE,6BACE,0CACA,kBAAMkC,SAZe,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,QAAQC,IAAII,EAAKE,SAASvC,MAAMwC,OAChCX,EAA0B,KAAV7B,EAAe,CAAEA,MAAOqC,EAAKE,SAASvC,MAAMwC,OAAU,CAAC,GACtEH,EAAKI,OACP,EAMG,WACM,kBAAOC,KAAK,OACXC,aAAa,MACbC,KAAK,QACLC,WAAS,KAEd,mBAAQH,KAAK,SAAb,wBAGF,SAAC,IAAD,CAAY5C,OAAQ2B,EAAc1B,IAAI,GAAGC,MAAK,wBAAmBA,OAGtE,C","sources":["components/MoviesList/MoviesList.jsx","components/servises/Fetch.js","pages/Movies.jsx"],"sourcesContent":["\nimport { Link } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies, url, query }) => {\n   \n      return(\n        <ul>\n            {movies.map(({ id, title}) => (\n              <li key={id}>\n                <Link to={`${url}${id}`} state={{ from: `${query}` }}>\n                  <h2>{title}</h2>\n                </Link>\n              </li>))}\n        </ul>\n    )\n}\n\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1&language=en-US`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovies = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const details = response.data;\n  return details;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast;\n  return credits;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results;\n  return reviews;\n};\n","import { useState,  useEffect  } from \"react\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { getMovies } from '../components/servises/Fetch'\nimport { useSearchParams} from \"react-router-dom\";\n\n\nexport const Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([])\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\")\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    (async function () {\n          try {\n          const movies = await getMovies(query)\n          setSearchMovies(movies)\n        } catch (error) {\n          console.log(error)\n          }\n        })()               \n    \n  }, [query]);\n\n\n  const handelFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    console.log(form.elements.query.value)\n    setSearchParams(query !== '' ? { query: form.elements.query.value } : {})\n     form.reset();\n  };\n\n  \n  return (\n    <main>\n      <h1>Search movie</h1>\n      <form onSubmit={handelFormSubmit}>\n            <input type=\"text\"\n             autoComplete=\"off\"\n             name=\"query\"\n             autoFocus\n            />\n        <button type=\"submit\">Search</button>\n      </form>\n      \n      <MoviesList movies={searchMovies} url='' query={`/movies?query=${query}`} />\n      </main>\n  );\n};\n\n"],"names":["MoviesList","movies","url","query","map","id","title","to","state","from","BASE_URL","API_KEY","getPopularMovies","axios","response","data","results","getMovies","searchQuery","getMovieDetails","details","getMovieCredits","credits","cast","getMovieReviews","reviews","Movies","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","autoComplete","name","autoFocus"],"sourceRoot":""}