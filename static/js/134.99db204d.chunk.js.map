{"version":3,"file":"static/js/134.99db204d.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/servises/Fetch.js","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom'\n\nexport const Wrapper = styled.ul`\n    display:flex;\n    gap:20px;\n    justify-content: center;\n    flex-wrap:wrap;\n`\n\nexport const CardWrapper = styled.li`\n    list-style:none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    background-color:white;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.3), -23px 0 20px -23px rgba(0,0,0,0.8), 23px 0 20px -23px rgba(0,0,0,0.8), 0 0 40px rgba(0,0,0,0.1) inset;   \n\n`\n\nexport const Link = styled(NavLink)`\n    text-decoration:none;\n      \n`\n\nexport const Poster = styled.img`\n    /* margin-bottom: 10px; */\n width: 280px;\n height: 402px;\n overflow:overlay;\nborder-radius: 5px;\n`\n\nexport const MovieName = styled.h2`\nmargin-bottom: 4px;\nfont-size: 18px;\nline-height: 1.17;\nwidth:170px;\nheight: 60px;\nwhite-space:pre-wrap;\ntext-align: center;\ncolor:black;\nmargin: 0 auto;\npadding: 10px 25px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`\n","\nimport{ Wrapper, CardWrapper , Poster, MovieName, Link } from './MoviesList.styled'\n\nexport const MoviesList = ({ movies, url, query }) => {\n   console.log(movies)\n      return(\n        <Wrapper>\n            {movies.map(({ id, title, poster_path}) => (\n              <CardWrapper key={id}>\n                <Link  to={`${url}${id}`} state={{ from: `${query}` }}>\n                  <Poster src={`http://image.tmdb.org/t/p/w400/${poster_path}`} alt=\"poster\" />\n                  <MovieName>{title}</MovieName>\n                </Link>\n              </CardWrapper>))}\n        </Wrapper>\n    )\n}\n\nexport default MoviesList;","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1&language=en-US`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovies = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const details = response.data;\n  return details;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast;\n  return credits;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results;\n  return reviews;\n};\n","import { useState,  useEffect  } from \"react\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { getMovies } from '../components/servises/Fetch'\nimport { useSearchParams} from \"react-router-dom\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport TextField from '@mui/material/TextField';\n\nexport const Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([])\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const [status, setStatus] = useState('')\n  const query = searchParams.get(\"query\")\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n\n    (async function () {\n          try {\n            const movies = await getMovies(query)\n            if (movies.length > 0) { setSearchMovies(movies) } else {\n            setSearchMovies([])\n            toast('Sorry, there are no movies matching your search query. Please try again.')\n            return\n       }\n            \n              \n        } catch (error) {\n            console.log(error)\n          \n          }\n        })()               \n    \n  }, [query]);\n\n\n  const handelFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    console.log(form.elements.query.value)\n    setSearchParams(query !== '' ? { query: form.elements.query.value } : {})\n     form.reset();\n  };\n\n  \n  return (\n    <main>\n      <h1 style={{ textAlign: 'center' }}>Search movie</h1>\n      <form  style={{ textAlign: 'center' }} onSubmit={handelFormSubmit}>\n         <TextField\n          id=\"outlined-textarea\"\n          type=\"text\"\n          sx={{ m: 1, width: '40ch' }}\n          autoComplete=\"off\"\n            color=\"success\"\n          name=\"query\"\n          autoFocus\n          label=\"Search\"\n          placeholder=\"Movie title\"\n          />     \n          </form>\n      <Toaster  position=\"top-right\" reverseOrder={false} />\n      <MoviesList movies={searchMovies} url='' query={`/movies?query=${query}`} />\n      </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","CardWrapper","Link","NavLink","Poster","MovieName","MoviesList","movies","url","query","console","log","map","id","title","poster_path","to","state","from","src","alt","BASE_URL","API_KEY","getPopularMovies","axios","response","data","results","getMovies","searchQuery","getMovieDetails","details","getMovieCredits","credits","cast","getMovieReviews","reviews","Movies","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","length","toast","style","textAlign","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","sx","m","width","autoComplete","color","name","autoFocus","label","placeholder","position","reverseOrder"],"sourceRoot":""}