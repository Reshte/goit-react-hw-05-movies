{"version":3,"file":"static/js/459.66f66d7f.chunk.js","mappings":"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","sources":["components/servises/Fetch.js","pages/MoviesDetails.styled.jsx","pages/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1&language=en-US`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovies = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const details = response.data;\n  return details;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast;\n  return credits;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results;\n  return reviews;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  :hover {\n    color: greenyellow;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding-bottom: 5px;\n  margin-bottom: 15px;\n box-shadow: 0 20px 16px -16px rgba(0,0,0,0.6);\n \n `\n export const PosterWrapper = styled.div`\n  width: 30vw;\n  padding: 30px;\n   \n`\nexport const Poster = styled.img`\n  display: block;\n    `\nexport const WrapperInfo = styled.div`\npadding: 50px;\nfont-size: 16px;\nwidth: 70vw;\n`\n","import { useParams, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieDetails } from \"../components/servises/Fetch\"\nimport {  Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Link, Container, Poster,PosterWrapper, WrapperInfo} from './MoviesDetails.styled'\n\n\nexport const MoviesDetails = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/movies\";\n \n  const { movieId } = useParams();\n  const [moviesDetails, setMoviesDetails] = useState([])\n  const [loading, setLoading] = useState(false)\n      \n  useEffect(() => {\n    if (movieId) {\n      (async function () {\n      setLoading(true)\n        try {\n          const movies = await getMovieDetails(movieId)\n          setMoviesDetails(movies)\n        } catch (error) {\n          console.log(error)\n        }\n        setLoading(false)\n        })()}\n\n  }, [movieId])\n \n  const { poster_path, genres, title, overview, vote_average, release_date } = moviesDetails\n  let genresInfo\n  let releasedate\n  if (genres) { genresInfo = genres.map(genre => { return genre.name }).join(\" \") }\n  if (release_date){releasedate = release_date.slice(0,4)}\n  return (\n    <div>\n      { loading && <Loader />}\n      {!loading && <div>\n      <Link to={backLinkHref}>‚Üê Go back</Link>\n      \n        <Container>\n          <PosterWrapper>\n            <Poster src={`http://image.tmdb.org/t/p/w400/${poster_path}`} alt=\"poster\" />\n          </PosterWrapper>\n           \n          <WrapperInfo>\n             <h2>{title}  ({releasedate})</h2>\n            <p>User score: {Math.round(vote_average*10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Geners</h3>\n            <p>{genresInfo}</p>\n           </WrapperInfo>\n        </Container>\n     \n      <ul style={{fontSize: '20px', listStyle: 'none'}}>\n        <li>\n          <Link to=\"cast\" >Cast</Link>\n        </li>\n        <li>\n         <Link to=\"reviews\" >Reviews</Link>\n        </li>\n       </ul>\n        <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>}\n    </div>\n  \n    )\n};\n\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","getPopularMovies","axios","response","movies","data","results","getMovies","searchQuery","getMovieDetails","id","details","getMovieCredits","credits","cast","getMovieReviews","reviews","Link","styled","NavLink","Container","PosterWrapper","Poster","WrapperInfo","MoviesDetails","backLinkHref","useLocation","state","from","movieId","useParams","useState","moviesDetails","setMoviesDetails","loading","setLoading","useEffect","console","log","genresInfo","releasedate","poster_path","genres","title","overview","vote_average","release_date","map","genre","name","join","slice","Loader","to","src","alt","Math","round","style","fontSize","listStyle","Suspense","fallback"],"sourceRoot":""}