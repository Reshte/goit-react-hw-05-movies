{"version":3,"file":"static/js/186.587a98ab.chunk.js","mappings":"8QAIaA,EAAU,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACN,iBAAC,2FACGH,GAAW,GADd,mBAGyBI,EAAAA,EAAAA,IAAgBV,GAHzC,QAGSG,EAHT,QAIeQ,OAAS,EAAKP,EAAWD,GAAiBK,GAAS,GAJlE,gDAMCI,QAAQC,IAAR,MAND,QAQGP,GAAW,GARd,wDAAD,EAWH,GAAC,CAACN,KAGC,2BACKK,IAAW,SAAC,IAAD,IACXE,IAAS,qEACNA,IAAU,wBACTJ,EAAQW,KAAI,YAAwB,IAAtBC,EAAqB,EAArBA,OAAOC,EAAc,EAAdA,GAAGC,EAAW,EAAXA,QAAY,OAAO,2BAC5C,uBAAIF,KACJ,uBAAIE,MAFiDD,EAIpD,QAKhB,EAED,W,kMCvCME,EAAW,gCACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,EADpB,2BADO,cACxBG,EADwB,OAIxBC,EAASD,EAASE,KAAKC,QAJC,kBAKvBF,GALuB,2CAAH,qDAQhBG,EAAS,mCAAG,WAAMC,GAAN,yFACAN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACyEQ,IAFzE,cACjBL,EADiB,OAIjBC,EAASD,EAASE,KAAKC,QAJN,kBAKhBF,GALgB,2CAAH,sDAQTK,EAAe,mCAAG,WAAMZ,GAAN,yFACNK,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAF,EADA,oBACcG,EADd,oBADM,cACvBG,EADuB,OAKvBO,EAAUP,EAASE,KALI,kBAMtBK,GANsB,2CAAH,sDASfC,EAAe,mCAAG,WAAMd,GAAN,yFACNK,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAF,EADA,4BACsBG,EADtB,oBADM,cACvBG,EADuB,OAIvBS,EAAUT,EAASE,KAAKQ,KAJD,kBAKtBD,GALsB,2CAAH,sDAQfrB,EAAe,mCAAG,WAAMM,GAAN,yFACNK,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAF,EADA,4BACsBG,EADtB,2BADM,cACvBG,EADuB,OAIvBnB,EAAUmB,EAASE,KAAKC,QAJD,kBAKtBtB,GALsB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/servises/Fetch.js"],"sourcesContent":[" import { useEffect, useState } from \"react\"\n import { getMovieReviews } from \"../servises/Fetch\"\n import { useParams } from \"react-router-dom\";\nimport {Loader} from 'components/Loader/Loader'\nexport const Reviews = () => {   \n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    useEffect(() => {\n        (async function () {\n            setLoading(true)\n        try {\n            const reviews = await getMovieReviews(movieId)\n            if (reviews.length > 0) { setReviews(reviews) } else {setError(true)}\n                            } catch (error) {\n          console.log(error)\n            }\n            setLoading(false)\n        })()  \n        \n    },[movieId])\n\n    return (\n        <div>\n            {loading && <Loader />}\n            {error && <p>We don`t have any reviews for this movie</p>}\n             {! error &&  <ul>         \n               { reviews.map(({author,id,content})=>{return <li key={id}>\n                <p>{author}</p>\n                <p>{content}</p>\n                </li>                   \n                })\n                 }\n            </ul>}\n        </div>\n    )\n}\n\nexport default Reviews;","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getPopularMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=1&language=en-US`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovies = async searchQuery => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`\n  );\n  const movies = response.data.results;\n  return movies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const details = response.data;\n  return details;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast;\n  return credits;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const reviews = response.data.results;\n  return reviews;\n};\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","getMovieReviews","length","console","log","map","author","id","content","BASE_URL","API_KEY","getPopularMovies","axios","response","movies","data","results","getMovies","searchQuery","getMovieDetails","details","getMovieCredits","credits","cast"],"sourceRoot":""}